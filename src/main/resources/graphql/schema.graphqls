type Query {
    allCatalogs: [Catalog]
    allCategories: [Category]
    allProducts: [Product]
    getProductById(productId: ID): Product
}

type Mutation {
    createInventoryStatus(productId: ID, inventoryStatus: InventoryStatusInput): Product
}

type Catalog {
    id: ID
    name: String
    description: String
    startDate: String
    endDate: String
    createdDate: String
    products: [Product]
}

type Category {
    id: ID
    name: String
    displayText: String
    createdDate: String
    products: [Product]
}

type Product {
    id: ID
    name: String
    description: String
    sku: String
    createdDate: String
    category: Category
    catalogs: [Catalog]
    inventoryStatus: InventoryStatus
}

input InventoryStatusInput {
    status: InventoryStatuses
    quantity: Int
}

type InventoryStatus {
    product: Product
    status: InventoryStatuses
    quantity: Int
}

enum InventoryStatuses {
    IN_STOCK,
    OUT_OF_STOCK,
    BACK_ORDERED
}